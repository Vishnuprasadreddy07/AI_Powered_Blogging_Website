{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blogging-Applicaton-main old\\\\Blogging-Applicaton-main\\\\Source code\\\\Frontend\\\\my-react-project\\\\src\\\\components\\\\Postindetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostinDetail({\n  data\n}) {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const [posts, setPosts] = useState(null);\n  const [reply, setReply] = useState(\"\");\n  const [showAdditionalInfo, setShowAdditionalInfo] = useState(false);\n  const loggedIn = localStorage.getItem(\"loggedIn\");\n\n  // Fetch posts from the local data\n  useEffect(() => {\n    const fetchedPosts = data.getPosts();\n    setPosts(fetchedPosts);\n  }, [data]);\n  const post = posts === null || posts === void 0 ? void 0 : posts.find(e => e.id == postId);\n\n  // Ensure post is not undefined before accessing its properties\n  const {\n    body,\n    title,\n    topic\n  } = post || {};\n\n  // Load existing comments when post updates\n  useEffect(() => {\n    if (post) {\n      setComments(post.comments || []);\n    }\n  }, [post]);\n\n  // Function to add a new comment locally\n  const handleClick = () => {\n    const name = localStorage.getItem(\"userName\");\n    if (!reply.trim()) return; // Prevent empty comments\n\n    const newComment = {\n      author: name,\n      text: reply\n    };\n\n    // Update local comments state\n    setComments([...comments, newComment]);\n\n    // Update local data object\n    post.comments = [...post.comments, newComment];\n    setReply(\"\"); // Clear input after adding comment\n  };\n  const handleFillTextField = async () => {\n    setShowAdditionalInfo(!showAdditionalInfo);\n    if (!showAdditionalInfo) {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/generate-reply\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            post\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to generate reply\");\n        }\n        const responseData = await response.json();\n        setReply(responseData.generatedReply);\n      } catch (error) {\n        console.error(\"Error generating reply:\", error);\n      }\n    } else {\n      setReply(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"0 auto\",\n      padding: \"20px\"\n    },\n    children: [post ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: \"24px\",\n          marginBottom: \"10px\"\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          fontSize: \"16px\",\n          fontStyle: \"italic\",\n          marginBottom: \"0\"\n        },\n        children: [\"Topic: \", topic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"16px\",\n          lineHeight: \"1.6\",\n          marginBottom: \"20px\"\n        },\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), loggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Enter reply\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        style: {\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#4caf50\",\n          color: \"white\",\n          borderRadius: \"5px\",\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          fontWeight: \"bold\",\n          border: \"none\",\n          cursor: \"pointer\",\n          marginRight: \"10px\"\n        },\n        onClick: handleClick,\n        children: \"Add a reply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#007bff\",\n          color: \"white\",\n          borderRadius: \"5px\",\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          fontWeight: \"bold\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        onClick: handleFillTextField,\n        children: showAdditionalInfo ? \"Disable reply by ChatGPT\" : \"Generate reply by ChatGPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: \"20px\",\n        marginBottom: \"10px\"\n      },\n      children: \"Reply Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#f0f0f0\",\n        padding: \"10px\",\n        marginBottom: \"10px\"\n      },\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"0\",\n            padding: \"5px 0\",\n            fontWeight: \"bold\"\n          },\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"0\",\n            padding: \"5px 0\",\n            color: \"#888\"\n          },\n          children: [\"Author: \", comment.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(PostinDetail, \"kMAeqRb8uTFYFKxhK4mWgRqlZno=\", false, function () {\n  return [useParams];\n});\n_c = PostinDetail;\nexport default PostinDetail;\nvar _c;\n$RefreshReg$(_c, \"PostinDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Button","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","PostinDetail","data","_s","postId","comments","setComments","posts","setPosts","reply","setReply","showAdditionalInfo","setShowAdditionalInfo","loggedIn","localStorage","getItem","fetchedPosts","getPosts","post","find","e","id","body","title","topic","handleClick","name","trim","newComment","author","text","handleFillTextField","response","fetch","method","headers","JSON","stringify","ok","Error","responseData","json","generatedReply","error","console","style","maxWidth","margin","padding","children","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontStyle","lineHeight","label","variant","fullWidth","value","onChange","target","backgroundColor","color","borderRadius","fontWeight","border","cursor","marginRight","onClick","map","comment","index","_c","$RefreshReg$"],"sources":["D:/Blogging-Applicaton-main old/Blogging-Applicaton-main/Source code/Frontend/my-react-project/src/components/Postindetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, TextField } from \"@mui/material\";\r\n\r\nfunction PostinDetail({ data }) {\r\n  const { postId } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n  const [posts, setPosts] = useState(null);\r\n  const [reply, setReply] = useState(\"\");\r\n  const [showAdditionalInfo, setShowAdditionalInfo] = useState(false);\r\n  const loggedIn = localStorage.getItem(\"loggedIn\");\r\n\r\n  // Fetch posts from the local data\r\n  useEffect(() => {\r\n    const fetchedPosts = data.getPosts();\r\n    setPosts(fetchedPosts);\r\n  }, [data]);\r\n\r\n  const post = posts?.find((e) => e.id == postId);\r\n\r\n  // Ensure post is not undefined before accessing its properties\r\n  const { body, title, topic } = post || {};\r\n\r\n  // Load existing comments when post updates\r\n  useEffect(() => {\r\n    if (post) {\r\n      setComments(post.comments || []);\r\n    }\r\n  }, [post]);\r\n\r\n  // Function to add a new comment locally\r\n  const handleClick = () => {\r\n    const name = localStorage.getItem(\"userName\");\r\n    if (!reply.trim()) return; // Prevent empty comments\r\n\r\n    const newComment = {\r\n      author: name,\r\n      text: reply,\r\n    };\r\n\r\n    // Update local comments state\r\n    setComments([...comments, newComment]);\r\n\r\n    // Update local data object\r\n    post.comments = [...post.comments, newComment];\r\n\r\n    setReply(\"\"); // Clear input after adding comment\r\n  };\r\n\r\n  const handleFillTextField = async () => {\r\n    setShowAdditionalInfo(!showAdditionalInfo);\r\n    if (!showAdditionalInfo) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/generate-reply\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ post }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to generate reply\");\r\n        }\r\n\r\n        const responseData = await response.json();\r\n        setReply(responseData.generatedReply);\r\n      } catch (error) {\r\n        console.error(\"Error generating reply:\", error);\r\n      }\r\n    } else {\r\n      setReply(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"600px\", margin: \"0 auto\", padding: \"20px\" }}>\r\n      {post ? (\r\n        <>\r\n          <h1 style={{ fontSize: \"24px\", marginBottom: \"10px\" }}>{title}</h1>\r\n          <h3 style={{ fontSize: \"16px\", fontStyle: \"italic\", marginBottom: \"0\" }}>\r\n            Topic: {topic}\r\n          </h3>\r\n          <p style={{ fontSize: \"16px\", lineHeight: \"1.6\", marginBottom: \"20px\" }}>\r\n            {body}\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n      {loggedIn ? (\r\n        <>\r\n          <TextField\r\n            label=\"Enter reply\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={reply}\r\n            onChange={(e) => setReply(e.target.value)}\r\n            style={{ marginBottom: \"10px\" }}\r\n          />\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#4caf50\",\r\n              color: \"white\",\r\n              borderRadius: \"5px\",\r\n              padding: \"10px 20px\",\r\n              fontSize: \"16px\",\r\n              fontWeight: \"bold\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              marginRight: \"10px\",\r\n            }}\r\n            onClick={handleClick}\r\n          >\r\n            Add a reply\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#007bff\",\r\n              color: \"white\",\r\n              borderRadius: \"5px\",\r\n              padding: \"10px 20px\",\r\n              fontSize: \"16px\",\r\n              fontWeight: \"bold\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n            }}\r\n            onClick={handleFillTextField}\r\n          >\r\n            {showAdditionalInfo ? \"Disable reply by ChatGPT\" : \"Generate reply by ChatGPT\"}\r\n          </Button>\r\n        </>\r\n      ) : null}\r\n\r\n      <h2 style={{ fontSize: \"20px\", marginBottom: \"10px\" }}>Reply Section</h2>\r\n      <div style={{ backgroundColor: \"#f0f0f0\", padding: \"10px\", marginBottom: \"10px\" }}>\r\n        {comments.map((comment, index) => (\r\n          <div key={index} style={{ marginBottom: \"10px\" }}>\r\n            <p style={{ margin: \"0\", padding: \"5px 0\", fontWeight: \"bold\" }}>\r\n              {comment.text}\r\n            </p>\r\n            <p style={{ margin: \"0\", padding: \"5px 0\", color: \"#888\" }}>\r\n              Author: {comment.author}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostinDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}