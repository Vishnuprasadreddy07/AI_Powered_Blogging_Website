{"ast":null,"code":"import User from \"./classes/User\";\nimport Post from \"./classes/Post\";\nconst user = new User();\nconst post = new Post();\nclass Datac {\n  constructor() {\n    this.getPostsByTopic = (topic, data) => {\n      const fp = [];\n      if (topic == \"\" || topic == \"All posts\") {\n        return data;\n      }\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].topic == topic) {\n          fp.push(new Post(data[i].id, data[i].title, data[i].body, data[i].author, data[i].topic, data[i].comments));\n        }\n      }\n      // console.log(\"From Datac\" + topic);\n      return fp;\n    };\n    this.addPost = post => {\n      this.state.posts.push(new Post(post.id, post.title, post.body, post.author, post.topic, post.comments));\n      console.log(\"post array updated\");\n    };\n    this.deletePost = postId => {\n      this.state.posts = this.state.posts.filter(post => post.id !== postId);\n      console.log(\"post deleted\");\n    };\n    this.addComment = comment => {\n      console.log(\"From Data\");\n      console.log(comment);\n      for (let i = 0; i < this.state.posts.length; i++) {\n        if (Number(this.state.posts[i].id) === Number(comment.postId)) {\n          this.state.posts[i].comments.push(comment);\n          console.log(\"comment added\");\n        }\n      }\n      console.log(this.state.posts);\n    };\n    this.toggleUserStatus = userId => {\n      const {\n        users\n      } = this.state;\n      const updatedUsers = users.map(user => {\n        if (user.id === userId) {\n          return {\n            ...user,\n            status: user.status === \"active\" ? \"inactive\" : \"active\"\n          };\n        }\n        return user;\n      });\n      this.state.users = updatedUsers;\n      // console.log(\"User status updated\" + updatedUsers);\n      return this.state.users;\n    };\n    this.state = {\n      users: [],\n      admins: [],\n      faculty: [],\n      moderator: [],\n      staff: [],\n      posts: [],\n      students: []\n    };\n    this.state.users = user.getUsers();\n    this.state.posts = post.getPosts();\n  }\n  getUsers() {\n    return this.state.users;\n  }\n  getPosts() {\n    // console.log(\"1\" + this.state.posts + \"calling from DATAC\");\n    return this.state.posts;\n  }\n}\nexport default Datac;","map":{"version":3,"names":["User","Post","user","post","Datac","constructor","getPostsByTopic","topic","data","fp","i","length","push","id","title","body","author","comments","addPost","state","posts","console","log","deletePost","postId","filter","addComment","comment","Number","toggleUserStatus","userId","users","updatedUsers","map","status","admins","faculty","moderator","staff","students","getUsers","getPosts"],"sources":["C:/Users/Vishnu/AI_Powered_Blogging_Website/Source Code/Frontend/my-react-project/src/components/Datac.js"],"sourcesContent":["import User from \"./classes/User\";\r\nimport Post from \"./classes/Post\";\r\n\r\nconst user = new User();\r\nconst post = new Post();\r\n\r\nclass Datac {\r\n  constructor() {\r\n    this.state = {\r\n      users: [],\r\n      admins: [],\r\n      faculty: [],\r\n      moderator: [],\r\n      staff: [],\r\n      posts: [],\r\n      students: [],\r\n    };\r\n    this.state.users = user.getUsers();\r\n    this.state.posts = post.getPosts();\r\n  }\r\n  getUsers() {\r\n    return this.state.users;\r\n  }\r\n  getPosts() {\r\n    // console.log(\"1\" + this.state.posts + \"calling from DATAC\");\r\n    return this.state.posts;\r\n  }\r\n\r\n  getPostsByTopic = (topic, data) => {\r\n    const fp = [];\r\n    if (topic == \"\" || topic == \"All posts\") {\r\n      return data;\r\n    }\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].topic == topic) {\r\n        fp.push(\r\n          new Post(\r\n            data[i].id,\r\n            data[i].title,\r\n            data[i].body,\r\n            data[i].author,\r\n            data[i].topic,\r\n            data[i].comments\r\n          )\r\n        );\r\n      }\r\n    }\r\n    // console.log(\"From Datac\" + topic);\r\n    return fp;\r\n  };\r\n  addPost = (post) => {\r\n    this.state.posts.push(\r\n      new Post(\r\n        post.id,\r\n        post.title,\r\n        post.body,\r\n        post.author,\r\n        post.topic,\r\n        post.comments\r\n      )\r\n    );\r\n    console.log(\"post array updated\");\r\n  };\r\n\r\n  deletePost = (postId) => {\r\n    this.state.posts = this.state.posts.filter((post) => post.id !== postId);\r\n    console.log(\"post deleted\");\r\n  };\r\n  addComment = (comment) => {\r\n    console.log(\"From Data\");\r\n    console.log(comment);\r\n    for (let i = 0; i < this.state.posts.length; i++) {\r\n      if (Number(this.state.posts[i].id) === Number(comment.postId))\r\n        {\r\n        this.state.posts[i].comments.push(comment);\r\n        console.log(\"comment added\");\r\n      }\r\n    }\r\n    console.log(this.state.posts);\r\n  };\r\n  \r\n  toggleUserStatus = (userId) => {\r\n    const { users } = this.state;\r\n    const updatedUsers = users.map((user) => {\r\n      if (user.id === userId) {\r\n        return {\r\n          ...user,\r\n          status: user.status === \"active\" ? \"inactive\" : \"active\",\r\n        };\r\n      }\r\n      return user;\r\n    });\r\n    this.state.users = updatedUsers;\r\n    // console.log(\"User status updated\" + updatedUsers);\r\n    return this.state.users;\r\n  };\r\n}\r\n\r\nexport default Datac;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}