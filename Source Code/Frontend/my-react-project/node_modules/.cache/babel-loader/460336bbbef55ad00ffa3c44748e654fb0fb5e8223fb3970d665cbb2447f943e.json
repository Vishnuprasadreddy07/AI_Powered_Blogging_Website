{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blogging-Applicaton-main old\\\\Blogging-Applicaton-main\\\\Source code\\\\Frontend\\\\my-react-project\\\\src\\\\components\\\\Blog.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as React from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Header from \"./Header\";\nimport FeaturedPost from \"./FeaturedPost\";\nimport Footer from \"./Footer\";\nimport { useState, useEffect } from \"react\";\nimport Modal from \"@mui/material/Modal\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sections = [{\n  title: \"Academic Resources\"\n}, {\n  title: \"Career Services\"\n}, {\n  title: \"Campus\"\n}, {\n  title: \"Culture\"\n}, {\n  title: \"Local Community Resources\"\n}, {\n  title: \"Social\"\n}, {\n  title: \"Sports\"\n}, {\n  title: \"Health and Wellness\"\n}, {\n  title: \"Technology\"\n}, {\n  title: \"Travel\"\n}, {\n  title: \"Alumni\"\n}, {\n  title: \"All posts\"\n}];\nconst defaultTheme = createTheme();\nexport default function Blog(props) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filteredposts, setFilteredPosts] = useState([]);\n  const {\n    selectedSection,\n    setSelectedSection,\n    data\n  } = props;\n  const [messages, setMessages] = useState([]);\n  const [chatbotMessages, setChatbotMessages] = useState([]); // For ChatGPT\n  const [openModal, setOpenModal] = useState(false); // For Recommendation Bot\n  const [openChatbotModal, setOpenChatbotModal] = useState(false); // For ChatGPT\n  const location = useLocation();\n  const refreshFlag = props;\n  useEffect(() => {\n    const fetchData = async () => {\n      const posts = await data.getPosts();\n      setPosts(posts);\n    };\n    fetchData();\n  }, [location.pathname]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const posts = await data.getPosts();\n      setFilteredPosts(posts);\n    };\n    fetchData();\n  }, [data]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const fp = await data.getPostsByTopic(selectedSection, posts);\n      setFilteredPosts(fp);\n    };\n    if (posts.length > 0) {\n      fetchData();\n    }\n  }, [posts, selectedSection]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const fp = await data.getPostsByTopic(selectedSection, posts);\n      setFilteredPosts(fp);\n    };\n    if (filteredposts.length <= 0) {\n      fetchData();\n    }\n  }, [filteredposts, selectedSection]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const posts = await data.getPosts();\n      setPosts(posts);\n    };\n    fetchPosts();\n  }, []);\n  const users = data.getUsers();\n  useEffect(() => {\n    const fetchData = async () => {\n      const posts = await data.getPosts();\n      setPosts(posts);\n    };\n    fetchData();\n  }, [refreshFlag]);\n\n  // ✅ Recommendation bot handler\n  const handleSendMessage = async message => {\n    setMessages(prevMessages => [...prevMessages, {\n      text: message,\n      sender: \"user\"\n    }]);\n    try {\n      const {\n        completions,\n        completion2,\n        completion3\n      } = await fetchDataFromBackend();\n      const responseMessage = `Restaurants:\\n${formatRestaurants(completions)}\\n\\nMusical events:\\n${formatEvents(completion2)}\\n\\nSports events:\\n${formatSportsEvents(completion3)}`;\n      setMessages(prevMessages => [...prevMessages, {\n        text: responseMessage,\n        sender: \"Assistant\"\n      }]);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  // ✅ ChatGPT general assistant handler\n  const handleChatbotMessage = async message => {\n    setChatbotMessages(prev => [...prev, {\n      text: message,\n      sender: \"user\"\n    }]);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: message\n        })\n      });\n      const data = await response.json();\n      setChatbotMessages(prev => [...prev, {\n        text: data.reply,\n        sender: \"Assistant\"\n      }]);\n    } catch (error) {\n      console.error(\"Chatbot error:\", error);\n      setChatbotMessages(prev => [...prev, {\n        text: \"Oops! Something went wrong. Try again later.\",\n        sender: \"Assistant\"\n      }]);\n    }\n  };\n  const fetchDataFromBackend = async () => {\n    try {\n      const locationData = {\n        latitude: 41.843783178979265,\n        longitude: -87.62321154781516,\n        city: \"Chicago\"\n      };\n      const apiKey = \"70e49117b80f210af90236e6189abc4a\";\n      const weatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${locationData.latitude}&lon=${locationData.longitude}&appid=${apiKey}`);\n      const weatherData = await weatherResponse.json();\n      const postData = {\n        location: locationData,\n        weather: weatherData,\n        latitude: locationData.latitude,\n        longitude: locationData.longitude\n      };\n      const backendResponse = await fetch(\"http://localhost:4000/data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(postData)\n      });\n      const responseData = await backendResponse.json();\n      return {\n        completions: responseData.completions,\n        completion2: responseData.completion2,\n        completion3: responseData.completion3\n      };\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      return {};\n    }\n  };\n  const formatRestaurants = restaurants => {\n    return restaurants.map((restaurant, index) => {\n      const {\n        title,\n        address,\n        open_state,\n        operating_hours\n      } = restaurant;\n      let hours = \"\";\n      for (let day in operating_hours) {\n        hours += `- ${day}: ${operating_hours[day]}\\n`;\n      }\n      return `${index + 1}. ${title}\\n   Address: ${address}\\n   Open State: ${open_state}\\n   Operating Hours:\\n${hours}`;\n    }).join(\"\\n\");\n  };\n  const formatEvents = events => {\n    return events.map((event, index) => {\n      const {\n        title,\n        address,\n        open_state,\n        description,\n        operating_hours\n      } = event;\n      let hours = \"\";\n      for (let day in operating_hours) {\n        hours += `- ${day}: ${operating_hours[day]}\\n`;\n      }\n      return `${index + 1}. ${title}\\n   Address: ${address}\\n   Open State: ${open_state}\\n   Description: ${description}\\n   Operating Hours:\\n${hours}`;\n    }).join(\"\\n\");\n  };\n  const formatSportsEvents = events => {\n    return events.map((event, index) => {\n      const {\n        sport,\n        gps_coordinates\n      } = event;\n      const {\n        title,\n        date,\n        address,\n        link,\n        description\n      } = sport;\n      const eventDate = new Date(date);\n      const formattedDate = `${eventDate.toLocaleDateString()} ${eventDate.toLocaleTimeString()}`;\n      return `${index + 1}. ${title}\\n   Date: ${formattedDate}\\n   Address: ${address.join(\", \")}\\n   Link: ${link}\\n   Description: ${description}\\n   Coordinates: (${gps_coordinates.latitude}, ${gps_coordinates.longitude})`;\n    }).join(\"\\n\");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: defaultTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Blog\",\n        users: users,\n        setFilteredPosts: setFilteredPosts,\n        sections: sections,\n        selectedSection: selectedSection,\n        setSelectedSection: setSelectedSection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: filteredposts.map(post => /*#__PURE__*/_jsxDEV(FeaturedPost, {\n            post: post\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      title: \"Footer\",\n      description: \"Something here to give the footer a purpose!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenModal(true),\n      style: {\n        position: \"fixed\",\n        bottom: \"20px\",\n        right: \"20px\",\n        zIndex: \"1000\",\n        padding: \"10px 20px\",\n        borderRadius: \"4px\",\n        border: \"none\",\n        backgroundColor: \"#007bff\",\n        color: \"#fff\",\n        cursor: \"pointer\",\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\"\n      },\n      children: \"Open Chatbot (Assistant)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenChatbotModal(true),\n      style: {\n        position: \"fixed\",\n        bottom: \"70px\",\n        right: \"20px\",\n        zIndex: \"1000\",\n        padding: \"10px 20px\",\n        borderRadius: \"4px\",\n        border: \"none\",\n        backgroundColor: \"#28a745\",\n        color: \"#fff\",\n        cursor: \"pointer\",\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\"\n      },\n      children: \"Chat with AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openModal,\n      onClose: () => setOpenModal(false),\n      \"aria-labelledby\": \"chatbot-modal-title\",\n      \"aria-describedby\": \"chatbot-modal-description\",\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        messages: messages,\n        onSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openChatbotModal,\n      onClose: () => setOpenChatbotModal(false),\n      \"aria-labelledby\": \"chatgpt-modal-title\",\n      \"aria-describedby\": \"chatgpt-modal-description\",\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        messages: chatbotMessages,\n        onSendMessage: handleChatbotMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(Blog, \"GZbjn2Fwn8yv1TAwr9i5RuDp5Ho=\", false, function () {\n  return [useLocation];\n});\n_c = Blog;\nfunction Chatbot({\n  messages,\n  onSendMessage\n}) {\n  _s2();\n  const [inputText, setInputText] = useState(\"\");\n  const handleChange = e => {\n    setInputText(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputText.trim() !== \"\") {\n      onSendMessage(inputText.trim());\n      setInputText(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#f0f0f0\",\n      padding: \"20px\",\n      borderRadius: \"8px\",\n      boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n      maxWidth: \"600px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: \"400px\",\n        overflowY: \"auto\",\n        marginBottom: \"10px\"\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: message.sender === \"user\" ? \"right\" : \"left\",\n          marginBottom: \"10px\",\n          fontSize: \"16px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: message.sender === \"user\" ? \"You: \" : \"Assistant: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: handleChange,\n        placeholder: \"Type your message...\",\n        style: {\n          width: \"calc(100% - 80px)\",\n          padding: \"10px\",\n          borderRadius: \"4px\",\n          border: \"1px solid #ccc\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"10px 20px\",\n          borderRadius: \"4px\",\n          border: \"none\",\n          backgroundColor: \"#007bff\",\n          color: \"#fff\",\n          cursor: \"pointer\",\n          marginTop: \"10px\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n}\n_s2(Chatbot, \"FupQuLxG7pBPrulNgTXkcZMsQO8=\");\n_c2 = Chatbot;\nvar _c, _c2;\n$RefreshReg$(_c, \"Blog\");\n$RefreshReg$(_c2, \"Chatbot\");","map":{"version":3,"names":["React","CssBaseline","Grid","Container","createTheme","ThemeProvider","Header","FeaturedPost","Footer","useState","useEffect","Modal","useLocation","jsxDEV","_jsxDEV","sections","title","defaultTheme","Blog","props","_s","posts","setPosts","filteredposts","setFilteredPosts","selectedSection","setSelectedSection","data","messages","setMessages","chatbotMessages","setChatbotMessages","openModal","setOpenModal","openChatbotModal","setOpenChatbotModal","location","refreshFlag","fetchData","getPosts","pathname","fp","getPostsByTopic","length","fetchPosts","users","getUsers","handleSendMessage","message","prevMessages","text","sender","completions","completion2","completion3","fetchDataFromBackend","responseMessage","formatRestaurants","formatEvents","formatSportsEvents","error","console","handleChatbotMessage","prev","response","fetch","method","headers","body","JSON","stringify","prompt","json","reply","locationData","latitude","longitude","city","apiKey","weatherResponse","weatherData","postData","weather","backendResponse","responseData","restaurants","map","restaurant","index","address","open_state","operating_hours","hours","day","join","events","event","description","sport","gps_coordinates","date","link","eventDate","Date","formattedDate","toLocaleDateString","toLocaleTimeString","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","container","spacing","post","id","onClick","style","position","bottom","right","zIndex","padding","borderRadius","border","backgroundColor","color","cursor","boxShadow","open","onClose","display","alignItems","justifyContent","Chatbot","onSendMessage","_c","_s2","inputText","setInputText","handleChange","e","target","value","handleSubmit","preventDefault","trim","width","maxHeight","overflowY","marginBottom","textAlign","fontSize","fontWeight","onSubmit","type","onChange","placeholder","marginRight","marginTop","_c2","$RefreshReg$"],"sources":["D:/Blogging-Applicaton-main old/Blogging-Applicaton-main/Source code/Frontend/my-react-project/src/components/Blog.js"],"sourcesContent":["import * as React from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Header from \"./Header\";\r\nimport FeaturedPost from \"./FeaturedPost\";\r\nimport Footer from \"./Footer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nconst sections = [\r\n  { title: \"Academic Resources\" },\r\n  { title: \"Career Services\" },\r\n  { title: \"Campus\" },\r\n  { title: \"Culture\" },\r\n  { title: \"Local Community Resources\" },\r\n  { title: \"Social\" },\r\n  { title: \"Sports\" },\r\n  { title: \"Health and Wellness\" },\r\n  { title: \"Technology\" },\r\n  { title: \"Travel\" },\r\n  { title: \"Alumni\" },\r\n  { title: \"All posts\" },\r\n];\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function Blog(props) {\r\n  const [posts, setPosts] = useState([]);\r\n  const [filteredposts, setFilteredPosts] = useState([]);\r\n  const { selectedSection, setSelectedSection, data } = props;\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatbotMessages, setChatbotMessages] = useState([]); // For ChatGPT\r\n  const [openModal, setOpenModal] = useState(false); // For Recommendation Bot\r\n  const [openChatbotModal, setOpenChatbotModal] = useState(false); // For ChatGPT\r\n  const location = useLocation();\r\n  const refreshFlag = props;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const posts = await data.getPosts();\r\n      setPosts(posts);\r\n    };\r\n    fetchData();\r\n  }, [location.pathname]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const posts = await data.getPosts();\r\n      setFilteredPosts(posts);\r\n    };\r\n    fetchData();\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fp = await data.getPostsByTopic(selectedSection, posts);\r\n      setFilteredPosts(fp);\r\n    };\r\n    if (posts.length > 0) {\r\n      fetchData();\r\n    }\r\n  }, [posts, selectedSection]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fp = await data.getPostsByTopic(selectedSection, posts);\r\n      setFilteredPosts(fp);\r\n    };\r\n    if (filteredposts.length <= 0) {\r\n      fetchData();\r\n    }\r\n  }, [filteredposts, selectedSection]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      const posts = await data.getPosts();\r\n      setPosts(posts);\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const users = data.getUsers();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const posts = await data.getPosts();\r\n      setPosts(posts);\r\n    };\r\n    fetchData();\r\n  }, [refreshFlag]);\r\n\r\n  // ✅ Recommendation bot handler\r\n  const handleSendMessage = async (message) => {\r\n    setMessages((prevMessages) => [\r\n      ...prevMessages,\r\n      { text: message, sender: \"user\" },\r\n    ]);\r\n\r\n    try {\r\n      const { completions, completion2, completion3 } =\r\n        await fetchDataFromBackend();\r\n      const responseMessage = `Restaurants:\\n${formatRestaurants(\r\n        completions\r\n      )}\\n\\nMusical events:\\n${formatEvents(\r\n        completion2\r\n      )}\\n\\nSports events:\\n${formatSportsEvents(completion3)}`;\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { text: responseMessage, sender: \"Assistant\" },\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  // ✅ ChatGPT general assistant handler\r\n  const handleChatbotMessage = async (message) => {\r\n    setChatbotMessages((prev) => [...prev, { text: message, sender: \"user\" }]);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/chatbot\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ prompt: message }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      setChatbotMessages((prev) => [\r\n        ...prev,\r\n        { text: data.reply, sender: \"Assistant\" },\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Chatbot error:\", error);\r\n      setChatbotMessages((prev) => [\r\n        ...prev,\r\n        {\r\n          text: \"Oops! Something went wrong. Try again later.\",\r\n          sender: \"Assistant\",\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const fetchDataFromBackend = async () => {\r\n    try {\r\n      const locationData = {\r\n        latitude: 41.843783178979265,\r\n        longitude: -87.62321154781516,\r\n        city: \"Chicago\",\r\n      };\r\n      const apiKey = \"70e49117b80f210af90236e6189abc4a\";\r\n      const weatherResponse = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?lat=${locationData.latitude}&lon=${locationData.longitude}&appid=${apiKey}`\r\n      );\r\n      const weatherData = await weatherResponse.json();\r\n      const postData = {\r\n        location: locationData,\r\n        weather: weatherData,\r\n        latitude: locationData.latitude,\r\n        longitude: locationData.longitude,\r\n      };\r\n\r\n      const backendResponse = await fetch(\"http://localhost:4000/data\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(postData),\r\n      });\r\n\r\n      const responseData = await backendResponse.json();\r\n      return {\r\n        completions: responseData.completions,\r\n        completion2: responseData.completion2,\r\n        completion3: responseData.completion3,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const formatRestaurants = (restaurants) => {\r\n    return restaurants\r\n      .map((restaurant, index) => {\r\n        const { title, address, open_state, operating_hours } = restaurant;\r\n        let hours = \"\";\r\n        for (let day in operating_hours) {\r\n          hours += `- ${day}: ${operating_hours[day]}\\n`;\r\n        }\r\n        return `${\r\n          index + 1\r\n        }. ${title}\\n   Address: ${address}\\n   Open State: ${open_state}\\n   Operating Hours:\\n${hours}`;\r\n      })\r\n      .join(\"\\n\");\r\n  };\r\n\r\n  const formatEvents = (events) => {\r\n    return events\r\n      .map((event, index) => {\r\n        const { title, address, open_state, description, operating_hours } =\r\n          event;\r\n        let hours = \"\";\r\n        for (let day in operating_hours) {\r\n          hours += `- ${day}: ${operating_hours[day]}\\n`;\r\n        }\r\n        return `${\r\n          index + 1\r\n        }. ${title}\\n   Address: ${address}\\n   Open State: ${open_state}\\n   Description: ${description}\\n   Operating Hours:\\n${hours}`;\r\n      })\r\n      .join(\"\\n\");\r\n  };\r\n\r\n  const formatSportsEvents = (events) => {\r\n    return events\r\n      .map((event, index) => {\r\n        const { sport, gps_coordinates } = event;\r\n        const { title, date, address, link, description } = sport;\r\n        const eventDate = new Date(date);\r\n        const formattedDate = `${eventDate.toLocaleDateString()} ${eventDate.toLocaleTimeString()}`;\r\n        return `${\r\n          index + 1\r\n        }. ${title}\\n   Date: ${formattedDate}\\n   Address: ${address.join(\r\n          \", \"\r\n        )}\\n   Link: ${link}\\n   Description: ${description}\\n   Coordinates: (${\r\n          gps_coordinates.latitude\r\n        }, ${gps_coordinates.longitude})`;\r\n      })\r\n      .join(\"\\n\");\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <Header\r\n          title=\"Blog\"\r\n          users={users}\r\n          setFilteredPosts={setFilteredPosts}\r\n          sections={sections}\r\n          selectedSection={selectedSection}\r\n          setSelectedSection={setSelectedSection}\r\n        />\r\n        <main>\r\n          <Grid container spacing={4}>\r\n            {filteredposts.map((post) => (\r\n              <FeaturedPost key={post.id} post={post} />\r\n            ))}\r\n          </Grid>\r\n        </main>\r\n      </Container>\r\n      <Footer title=\"Footer\" description=\"Something here to give the footer a purpose!\" />\r\n\r\n      {/* Button for Recommendation Assistant */}\r\n      <button\r\n        onClick={() => setOpenModal(true)}\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"20px\",\r\n          right: \"20px\",\r\n          zIndex: \"1000\",\r\n          padding: \"10px 20px\",\r\n          borderRadius: \"4px\",\r\n          border: \"none\",\r\n          backgroundColor: \"#007bff\",\r\n          color: \"#fff\",\r\n          cursor: \"pointer\",\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n        }}\r\n      >\r\n        Open Chatbot (Assistant)\r\n      </button>\r\n\r\n      {/* Button for ChatGPT AI */}\r\n      <button\r\n        onClick={() => setOpenChatbotModal(true)}\r\n        style={{\r\n          position: \"fixed\",\r\n          bottom: \"70px\",\r\n          right: \"20px\",\r\n          zIndex: \"1000\",\r\n          padding: \"10px 20px\",\r\n          borderRadius: \"4px\",\r\n          border: \"none\",\r\n          backgroundColor: \"#28a745\",\r\n          color: \"#fff\",\r\n          cursor: \"pointer\",\r\n          boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n        }}\r\n      >\r\n        Chat with AI\r\n      </button>\r\n\r\n      {/* Modal: Recommendation Assistant */}\r\n      <Modal\r\n        open={openModal}\r\n        onClose={() => setOpenModal(false)}\r\n        aria-labelledby=\"chatbot-modal-title\"\r\n        aria-describedby=\"chatbot-modal-description\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Chatbot messages={messages} onSendMessage={handleSendMessage} />\r\n      </Modal>\r\n\r\n      {/* Modal: ChatGPT AI Assistant */}\r\n      <Modal\r\n        open={openChatbotModal}\r\n        onClose={() => setOpenChatbotModal(false)}\r\n        aria-labelledby=\"chatgpt-modal-title\"\r\n        aria-describedby=\"chatgpt-modal-description\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Chatbot messages={chatbotMessages} onSendMessage={handleChatbotMessage} />\r\n      </Modal>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nfunction Chatbot({ messages, onSendMessage }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputText.trim() !== \"\") {\r\n      onSendMessage(inputText.trim());\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"#f0f0f0\",\r\n        padding: \"20px\",\r\n        borderRadius: \"8px\",\r\n        boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n        maxWidth: \"600px\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginBottom: \"10px\" }}>\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              textAlign: message.sender === \"user\" ? \"right\" : \"left\",\r\n              marginBottom: \"10px\",\r\n              fontSize: \"16px\",\r\n            }}\r\n          >\r\n            <span style={{ fontWeight: \"bold\" }}>\r\n              {message.sender === \"user\" ? \"You: \" : \"Assistant: \"}\r\n            </span>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={inputText}\r\n          onChange={handleChange}\r\n          placeholder=\"Type your message...\"\r\n          style={{\r\n            width: \"calc(100% - 80px)\",\r\n            padding: \"10px\",\r\n            borderRadius: \"4px\",\r\n            border: \"1px solid #ccc\",\r\n            marginRight: \"10px\",\r\n          }}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            borderRadius: \"4px\",\r\n            border: \"none\",\r\n            backgroundColor: \"#007bff\",\r\n            color: \"#fff\",\r\n            cursor: \"pointer\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,QAAQ,GAAG,CACf;EAAEC,KAAK,EAAE;AAAqB,CAAC,EAC/B;EAAEA,KAAK,EAAE;AAAkB,CAAC,EAC5B;EAAEA,KAAK,EAAE;AAAS,CAAC,EACnB;EAAEA,KAAK,EAAE;AAAU,CAAC,EACpB;EAAEA,KAAK,EAAE;AAA4B,CAAC,EACtC;EAAEA,KAAK,EAAE;AAAS,CAAC,EACnB;EAAEA,KAAK,EAAE;AAAS,CAAC,EACnB;EAAEA,KAAK,EAAE;AAAsB,CAAC,EAChC;EAAEA,KAAK,EAAE;AAAa,CAAC,EACvB;EAAEA,KAAK,EAAE;AAAS,CAAC,EACnB;EAAEA,KAAK,EAAE;AAAS,CAAC,EACnB;EAAEA,KAAK,EAAE;AAAY,CAAC,CACvB;AAED,MAAMC,YAAY,GAAGb,WAAW,CAAC,CAAC;AAElC,eAAe,SAASc,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAEgB,eAAe;IAAEC,kBAAkB;IAAEC;EAAK,CAAC,GAAGR,KAAK;EAC3D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjE,MAAM2B,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAC9B,MAAMyB,WAAW,GAAGlB,KAAK;EAEzBT,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMjB,KAAK,GAAG,MAAMM,IAAI,CAACY,QAAQ,CAAC,CAAC;MACnCjB,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC;IACDiB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,QAAQ,CAACI,QAAQ,CAAC,CAAC;EAEvB9B,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMjB,KAAK,GAAG,MAAMM,IAAI,CAACY,QAAQ,CAAC,CAAC;MACnCf,gBAAgB,CAACH,KAAK,CAAC;IACzB,CAAC;IACDiB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEVjB,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMG,EAAE,GAAG,MAAMd,IAAI,CAACe,eAAe,CAACjB,eAAe,EAAEJ,KAAK,CAAC;MAC7DG,gBAAgB,CAACiB,EAAE,CAAC;IACtB,CAAC;IACD,IAAIpB,KAAK,CAACsB,MAAM,GAAG,CAAC,EAAE;MACpBL,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACjB,KAAK,EAAEI,eAAe,CAAC,CAAC;EAE5Bf,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMG,EAAE,GAAG,MAAMd,IAAI,CAACe,eAAe,CAACjB,eAAe,EAAEJ,KAAK,CAAC;MAC7DG,gBAAgB,CAACiB,EAAE,CAAC;IACtB,CAAC;IACD,IAAIlB,aAAa,CAACoB,MAAM,IAAI,CAAC,EAAE;MAC7BL,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACf,aAAa,EAAEE,eAAe,CAAC,CAAC;EAEpCf,SAAS,CAAC,MAAM;IACd,MAAMkC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMvB,KAAK,GAAG,MAAMM,IAAI,CAACY,QAAQ,CAAC,CAAC;MACnCjB,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC;IACDuB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGlB,IAAI,CAACmB,QAAQ,CAAC,CAAC;EAE7BpC,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMjB,KAAK,GAAG,MAAMM,IAAI,CAACY,QAAQ,CAAC,CAAC;MACnCjB,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC;IACDiB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMU,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IAC3CnB,WAAW,CAAEoB,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;MAAEC,IAAI,EAAEF,OAAO;MAAEG,MAAM,EAAE;IAAO,CAAC,CAClC,CAAC;IAEF,IAAI;MACF,MAAM;QAAEC,WAAW;QAAEC,WAAW;QAAEC;MAAY,CAAC,GAC7C,MAAMC,oBAAoB,CAAC,CAAC;MAC9B,MAAMC,eAAe,GAAI,iBAAgBC,iBAAiB,CACxDL,WACF,CAAE,wBAAuBM,YAAY,CACnCL,WACF,CAAE,uBAAsBM,kBAAkB,CAACL,WAAW,CAAE,EAAC;MACzDzB,WAAW,CAAEoB,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAEC,IAAI,EAAEM,eAAe;QAAEL,MAAM,EAAE;MAAY,CAAC,CAC/C,CAAC;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAME,oBAAoB,GAAG,MAAOd,OAAO,IAAK;IAC9CjB,kBAAkB,CAAEgC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEb,IAAI,EAAEF,OAAO;MAAEG,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;IAE1E,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEvB;QAAQ,CAAC;MAC1C,CAAC,CAAC;MAEF,MAAMrB,IAAI,GAAG,MAAMqC,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElCzC,kBAAkB,CAAEgC,IAAI,IAAK,CAC3B,GAAGA,IAAI,EACP;QAAEb,IAAI,EAAEvB,IAAI,CAAC8C,KAAK;QAAEtB,MAAM,EAAE;MAAY,CAAC,CAC1C,CAAC;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC7B,kBAAkB,CAAEgC,IAAI,IAAK,CAC3B,GAAGA,IAAI,EACP;QACEb,IAAI,EAAE,8CAA8C;QACpDC,MAAM,EAAE;MACV,CAAC,CACF,CAAC;IACJ;EACF,CAAC;EAED,MAAMI,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMmB,YAAY,GAAG;QACnBC,QAAQ,EAAE,kBAAkB;QAC5BC,SAAS,EAAE,CAAC,iBAAiB;QAC7BC,IAAI,EAAE;MACR,CAAC;MACD,MAAMC,MAAM,GAAG,kCAAkC;MACjD,MAAMC,eAAe,GAAG,MAAMd,KAAK,CAChC,uDAAsDS,YAAY,CAACC,QAAS,QAAOD,YAAY,CAACE,SAAU,UAASE,MAAO,EAC7H,CAAC;MACD,MAAME,WAAW,GAAG,MAAMD,eAAe,CAACP,IAAI,CAAC,CAAC;MAChD,MAAMS,QAAQ,GAAG;QACf7C,QAAQ,EAAEsC,YAAY;QACtBQ,OAAO,EAAEF,WAAW;QACpBL,QAAQ,EAAED,YAAY,CAACC,QAAQ;QAC/BC,SAAS,EAAEF,YAAY,CAACE;MAC1B,CAAC;MAED,MAAMO,eAAe,GAAG,MAAMlB,KAAK,CAAC,4BAA4B,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACW,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMG,YAAY,GAAG,MAAMD,eAAe,CAACX,IAAI,CAAC,CAAC;MACjD,OAAO;QACLpB,WAAW,EAAEgC,YAAY,CAAChC,WAAW;QACrCC,WAAW,EAAE+B,YAAY,CAAC/B,WAAW;QACrCC,WAAW,EAAE8B,YAAY,CAAC9B;MAC5B,CAAC;IACH,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,MAAMH,iBAAiB,GAAI4B,WAAW,IAAK;IACzC,OAAOA,WAAW,CACfC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;MAC1B,MAAM;QAAExE,KAAK;QAAEyE,OAAO;QAAEC,UAAU;QAAEC;MAAgB,CAAC,GAAGJ,UAAU;MAClE,IAAIK,KAAK,GAAG,EAAE;MACd,KAAK,IAAIC,GAAG,IAAIF,eAAe,EAAE;QAC/BC,KAAK,IAAK,KAAIC,GAAI,KAAIF,eAAe,CAACE,GAAG,CAAE,IAAG;MAChD;MACA,OAAQ,GACNL,KAAK,GAAG,CACT,KAAIxE,KAAM,iBAAgByE,OAAQ,oBAAmBC,UAAW,0BAAyBE,KAAM,EAAC;IACnG,CAAC,CAAC,CACDE,IAAI,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMpC,YAAY,GAAIqC,MAAM,IAAK;IAC/B,OAAOA,MAAM,CACVT,GAAG,CAAC,CAACU,KAAK,EAAER,KAAK,KAAK;MACrB,MAAM;QAAExE,KAAK;QAAEyE,OAAO;QAAEC,UAAU;QAAEO,WAAW;QAAEN;MAAgB,CAAC,GAChEK,KAAK;MACP,IAAIJ,KAAK,GAAG,EAAE;MACd,KAAK,IAAIC,GAAG,IAAIF,eAAe,EAAE;QAC/BC,KAAK,IAAK,KAAIC,GAAI,KAAIF,eAAe,CAACE,GAAG,CAAE,IAAG;MAChD;MACA,OAAQ,GACNL,KAAK,GAAG,CACT,KAAIxE,KAAM,iBAAgByE,OAAQ,oBAAmBC,UAAW,qBAAoBO,WAAY,0BAAyBL,KAAM,EAAC;IACnI,CAAC,CAAC,CACDE,IAAI,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMnC,kBAAkB,GAAIoC,MAAM,IAAK;IACrC,OAAOA,MAAM,CACVT,GAAG,CAAC,CAACU,KAAK,EAAER,KAAK,KAAK;MACrB,MAAM;QAAEU,KAAK;QAAEC;MAAgB,CAAC,GAAGH,KAAK;MACxC,MAAM;QAAEhF,KAAK;QAAEoF,IAAI;QAAEX,OAAO;QAAEY,IAAI;QAAEJ;MAAY,CAAC,GAAGC,KAAK;MACzD,MAAMI,SAAS,GAAG,IAAIC,IAAI,CAACH,IAAI,CAAC;MAChC,MAAMI,aAAa,GAAI,GAAEF,SAAS,CAACG,kBAAkB,CAAC,CAAE,IAAGH,SAAS,CAACI,kBAAkB,CAAC,CAAE,EAAC;MAC3F,OAAQ,GACNlB,KAAK,GAAG,CACT,KAAIxE,KAAM,cAAawF,aAAc,iBAAgBf,OAAO,CAACK,IAAI,CAChE,IACF,CAAE,cAAaO,IAAK,qBAAoBJ,WAAY,sBAClDE,eAAe,CAACxB,QACjB,KAAIwB,eAAe,CAACvB,SAAU,GAAE;IACnC,CAAC,CAAC,CACDkB,IAAI,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEhF,OAAA,CAACT,aAAa;IAACsG,KAAK,EAAE1F,YAAa;IAAA2F,QAAA,gBACjC9F,OAAA,CAACb,WAAW;MAAA4G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACflG,OAAA,CAACX,SAAS;MAAC8G,QAAQ,EAAC,IAAI;MAAAL,QAAA,gBACtB9F,OAAA,CAACR,MAAM;QACLU,KAAK,EAAC,MAAM;QACZ6B,KAAK,EAAEA,KAAM;QACbrB,gBAAgB,EAAEA,gBAAiB;QACnCT,QAAQ,EAAEA,QAAS;QACnBU,eAAe,EAAEA,eAAgB;QACjCC,kBAAkB,EAAEA;MAAmB;QAAAmF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACFlG,OAAA;QAAA8F,QAAA,eACE9F,OAAA,CAACZ,IAAI;UAACgH,SAAS;UAACC,OAAO,EAAE,CAAE;UAAAP,QAAA,EACxBrF,aAAa,CAAC+D,GAAG,CAAE8B,IAAI,iBACtBtG,OAAA,CAACP,YAAY;YAAe6G,IAAI,EAAEA;UAAK,GAApBA,IAAI,CAACC,EAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAC1C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACZlG,OAAA,CAACN,MAAM;MAACQ,KAAK,EAAC,QAAQ;MAACiF,WAAW,EAAC;IAA8C;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGpFlG,OAAA;MACEwG,OAAO,EAAEA,CAAA,KAAMrF,YAAY,CAAC,IAAI,CAAE;MAClCsF,KAAK,EAAE;QACLC,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAE;MACb,CAAE;MAAAtB,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGTlG,OAAA;MACEwG,OAAO,EAAEA,CAAA,KAAMnF,mBAAmB,CAAC,IAAI,CAAE;MACzCoF,KAAK,EAAE;QACLC,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAE;MACb,CAAE;MAAAtB,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGTlG,OAAA,CAACH,KAAK;MACJwH,IAAI,EAAEnG,SAAU;MAChBoG,OAAO,EAAEA,CAAA,KAAMnG,YAAY,CAAC,KAAK,CAAE;MACnC,mBAAgB,qBAAqB;MACrC,oBAAiB,2BAA2B;MAC5CsF,KAAK,EAAE;QACLc,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAA3B,QAAA,eAEF9F,OAAA,CAAC0H,OAAO;QAAC5G,QAAQ,EAAEA,QAAS;QAAC6G,aAAa,EAAE1F;MAAkB;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eAGRlG,OAAA,CAACH,KAAK;MACJwH,IAAI,EAAEjG,gBAAiB;MACvBkG,OAAO,EAAEA,CAAA,KAAMjG,mBAAmB,CAAC,KAAK,CAAE;MAC1C,mBAAgB,qBAAqB;MACrC,oBAAiB,2BAA2B;MAC5CoF,KAAK,EAAE;QACLc,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB,CAAE;MAAA3B,QAAA,eAEF9F,OAAA,CAAC0H,OAAO;QAAC5G,QAAQ,EAAEE,eAAgB;QAAC2G,aAAa,EAAE3E;MAAqB;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB;AAAC5F,EAAA,CA3SuBF,IAAI;EAAA,QAQTN,WAAW;AAAA;AAAA8H,EAAA,GARNxH,IAAI;AA6S5B,SAASsH,OAAOA,CAAC;EAAE5G,QAAQ;EAAE6G;AAAc,CAAC,EAAE;EAAAE,GAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpI,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMqI,YAAY,GAAIC,CAAC,IAAK;IAC1BF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIP,SAAS,CAACQ,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3BX,aAAa,CAACG,SAAS,CAACQ,IAAI,CAAC,CAAC,CAAC;MAC/BP,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,oBACE/H,OAAA;IACEyG,KAAK,EAAE;MACLQ,eAAe,EAAE,SAAS;MAC1BH,OAAO,EAAE,MAAM;MACfC,YAAY,EAAE,KAAK;MACnBK,SAAS,EAAE,8BAA8B;MACzCjB,QAAQ,EAAE,OAAO;MACjBoC,KAAK,EAAE;IACT,CAAE;IAAAzC,QAAA,gBAEF9F,OAAA;MAAKyG,KAAK,EAAE;QAAE+B,SAAS,EAAE,OAAO;QAAEC,SAAS,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAA5C,QAAA,EACzEhF,QAAQ,CAAC0D,GAAG,CAAC,CAACtC,OAAO,EAAEwC,KAAK,kBAC3B1E,OAAA;QAEEyG,KAAK,EAAE;UACLkC,SAAS,EAAEzG,OAAO,CAACG,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM;UACvDqG,YAAY,EAAE,MAAM;UACpBE,QAAQ,EAAE;QACZ,CAAE;QAAA9C,QAAA,gBAEF9F,OAAA;UAAMyG,KAAK,EAAE;YAAEoC,UAAU,EAAE;UAAO,CAAE;UAAA/C,QAAA,EACjC5D,OAAO,CAACG,MAAM,KAAK,MAAM,GAAG,OAAO,GAAG;QAAa;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,EACNhE,OAAO,CAACE,IAAI;MAAA,GAVRsC,KAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlG,OAAA;MAAM8I,QAAQ,EAAEV,YAAa;MAAAtC,QAAA,gBAC3B9F,OAAA;QACE+I,IAAI,EAAC,MAAM;QACXZ,KAAK,EAAEL,SAAU;QACjBkB,QAAQ,EAAEhB,YAAa;QACvBiB,WAAW,EAAC,sBAAsB;QAClCxC,KAAK,EAAE;UACL8B,KAAK,EAAE,mBAAmB;UAC1BzB,OAAO,EAAE,MAAM;UACfC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,gBAAgB;UACxBkC,WAAW,EAAE;QACf;MAAE;QAAAnD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFlG,OAAA;QACE+I,IAAI,EAAC,QAAQ;QACbtC,KAAK,EAAE;UACLK,OAAO,EAAE,WAAW;UACpBC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,MAAM;UACdC,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,SAAS;UACjBgC,SAAS,EAAE;QACb,CAAE;QAAArD,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC2B,GAAA,CA1EQH,OAAO;AAAA0B,GAAA,GAAP1B,OAAO;AAAA,IAAAE,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}